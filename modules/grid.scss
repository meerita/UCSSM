
//           _____                    _____                    _____                    _____          
//          /\    \                  /\    \                  /\    \                  /\    \         
//         /::\    \                /::\    \                /::\    \                /::\    \        
//        /::::\    \              /::::\    \               \:::\    \              /::::\    \       
//       /::::::\    \            /::::::\    \               \:::\    \            /::::::\    \      
//      /:::/\:::\    \          /:::/\:::\    \               \:::\    \          /:::/\:::\    \     
//     /:::/  \:::\    \        /:::/__\:::\    \               \:::\    \        /:::/  \:::\    \    
//    /:::/    \:::\    \      /::::\   \:::\    \              /::::\    \      /:::/    \:::\    \   
//   /:::/    / \:::\    \    /::::::\   \:::\    \    ____    /::::::\    \    /:::/    / \:::\    \  
//  /:::/    /   \:::\ ___\  /:::/\:::\   \:::\____\  /\   \  /:::/\:::\    \  /:::/    /   \:::\ ___\ 
// /:::/____/  ___\:::|    |/:::/  \:::\   \:::|    |/::\   \/:::/  \:::\____\/:::/____/     \:::|    |
// \:::\    \ /\  /:::|____|\::/   |::::\  /:::|____|\:::\  /:::/    \::/    /\:::\    \     /:::|____|
//  \:::\    /::\ \::/    /  \/____|:::::\/:::/    /  \:::\/:::/    / \/____/  \:::\    \   /:::/    / 
//   \:::\   \:::\ \/____/         |:::::::::/    /    \::::::/    /            \:::\    \ /:::/    /  
//    \:::\   \:::\____\           |::|\::::/    /      \::::/____/              \:::\    /:::/    /   
//     \:::\  /:::/    /           |::| \::/____/        \:::\    \               \:::\  /:::/    /    
//      \:::\/:::/    /            |::|  ~|               \:::\    \               \:::\/:::/    /     
//       \::::::/    /             |::|   |                \:::\    \               \::::::/    /      
//        \::::/    /              \::|   |                 \:::\____\               \::::/    /       
//         \::/____/                \:|   |                  \::/    /                \::/____/        
//                                   \|___|                   \/____/                  ~~              
                                                                                                    

// Responsive Mobile
//
// Will cover from 100px onwards.
@if ($config-grid-sm) {
  @media (min-width: $device-sm) {
  // Definition of the media type
    .sm {
      // starts the grid-template-columns
      &-grid {
        @if ($config-sm-grid-column) {
          &-column {
            @for $column from 1 through $columns {
              &--#{$column} {
                grid-column: span $column / span $column
              }
            }
          }
        }
        @if ($config-sm-grid-row) {
          &-row {
            @for $column from 1 through $columns {
              &--#{$column} {
                grid-row: span $column / span $column
              }
            }
          }
        }
        @if ($config-sm-grid-template-columns) {
          &-template-columns {
            @for $column from 1 through $columns {
              &--#{$column} {
                grid-template-columns: repeat($column, 1fr)
              }
            }
          }
        }
        // Template Rows
        // 
        // If you need a design that defines rows instead of columns,
        // then uncomment this line.
        @if ($config-sm-grid-template-rows) {
          &-template-rows {
            @for $column from 1 through $columns {
              &--#{$column} {
                grid-template-rows: repeat($column, auto)
              }
            }
          }
        }
      }
    }
  }
}

// Portrait tablets
@if ($config-grid-md) {
  @media (min-width: $device-md) {
    // Definition of the media type
    .md {
      // Template columns
      //
      // It will define how many columns the x-axis will have.
      &-grid {
        @if ($config-md-grid-column) {
          &-column {
            @for $column from 1 through $columns {
              &--#{$column} {
                grid-column: span $column / span $column
              }
            }
          }
        }
        @if ($config-md-grid-row) {
          &-row {
            @for $column from 1 through $columns {
              &--#{$column} {
                grid-row: span $column / span $column
              }
            }
          }
        }
        @if ($config-md-grid-template-columns) {
          &-template-columns {
            @for $column from 1 through $columns {
              &--#{$column} {
                grid-template-columns: repeat($column, 1fr)
              }
            }
          }
        }
        // Template Rows
        // 
        // If you need a design that defines rows instead of columns,
        // then uncomment this line.
        @if ($config-md-grid-template-rows) {
          &-template-rows {
            @for $column from 1 through $columns {
              &--#{$column} {
                grid-template-rows: repeat($column, auto)
              }
            }
          }
        }
      }
    }
  }
}

// Landscape tablets and Desktop
@if ($config-grid-lg) {
  @media (min-width: $device-lg) {
    // Definition of the media type
    .lg {
      // Template columns
      //
      // It will define how many columns the x-axis will have.
      &-grid {
        @if ($config-lg-grid-column) {
          &-column {
            @for $column from 1 through $columns {
              &--#{$column} {
                grid-column: span $column / span $column
              }
            }
          }
        }
        @if ($config-lg-grid-row) {
          &-row {
            @for $column from 1 through $columns {
              &--#{$column} {
                grid-row: span $column / span $column
              }
            }
          }
        }
        @if ($config-lg-grid-template-columns) {
          &-template-columns {
            @for $column from 1 through $columns {
              &--#{$column} {
                grid-template-columns: repeat($column, 1fr)
              }
            }
          }
        }
        // Template Rows
        // 
        // If you need a design that defines rows instead of columns,
        // then uncomment this line.
        @if ($config-lg-grid-template-rows) {
          &-template-rows {
            @for $column from 1 through $columns {
              &--#{$column} {
                grid-template-rows: repeat($column, auto)
              }
            }
          }
        }
      }
    }
  }
}

// Large Desktop and Beyond
@if ($config-grid-xl) {
  @media (min-width: $device-xl) {
    // Definition of the media type
    .xl {
      // Template columns
      //
      // It will define how many columns the x-axis will have.
      &-grid {
        @if ($config-xl-grid-column) {
          &-column {
            @for $column from 1 through $columns {
              &--#{$column} {
                grid-column: span $column / span $column
              }
            }
          }
        }
        @if ($config-xl-grid-row) {
          &-row {
            @for $column from 1 through $columns {
              &--#{$column} {
                grid-row: span $column / span $column
              }
            }
          }
        }
        @if ($config-xl-grid-template-columns) {
          &-template-columns {
            @for $column from 1 through $columns {
              &--#{$column} {
                grid-template-columns: repeat($column, 1fr)
              }
            }
          }
        }
        // Template Rows
        // 
        // If you need a design that defines rows instead of columns,
        // then uncomment this line.
        @if ($config-xl-grid-template-rows) {
          &-template-rows {
            @for $column from 1 through $columns {
              &--#{$column} {
                grid-template-rows: repeat($column, auto)
              }
            }
          }
        }
      }
    }
  }
}